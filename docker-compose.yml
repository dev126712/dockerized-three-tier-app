services:
  web:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    environment: # Explicitly pass the ports Nginx needs for proxy_pass
      - FRONTEND_SERVER_ADDR=$FRONTEN_CONTAINER_NAME:$FRONTEND_PORT
      - API_SERVER_PORT=${API_SERVER_PORT}
    volumes:
      - ./proxy/nginx.conf.template:/tmp/nginx.conf
    env_file: .env
    container_name: reverse_proxy
    ports:
      - 80:80
    depends_on:
      - api-server
    networks: 
    - ${DOCKER_NETWORK}

  api-server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: server.1.0.0
    container_name: ${API_SERVER_CONTAINER_NAME}
    env_file: .env  
    ports:
      - ${API_SERVER_PORT}:${API_SERVER_PORT}
    restart: always
    networks: 
    - ${DOCKER_NETWORK}
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_URI: ${DATABASE_URI} # <-- This is needed
      PORT: ${API_SERVER_PORT_MAPPING} # <-- Match the port mapping
    volumes:
      - ./backend:/backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ${FRONTEN_CONTAINER_NAME}
    networks:
    - ${DOCKER_NETWORK} 
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      - api-server

  mongo:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: ${MONGO_IMAGE_NAME}
    container_name: ${MONGO_CONTAINER_NAME}
    env_file: .env
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
    - ${DOCKER_NETWORK} 
    restart: unless-stopped
    volumes:
      - database-v:/data/db
      - ./database:/docker-entrypoint-initdb.d 
    command: mongod --auth
  

    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.runCommand('ping').ok" ]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 60s # Wait 10 seconds before starting checks


  mongo-express:
    image: mongo-express
    container_name: ${MONGO_EXPRESS_CONTAINER_NAME}
    ports:
      - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}
    environment:
      ME_CONFIG_MONGODB_SERVER: ${MONGODB_EXPRESS_SERVER}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_EXPRESS_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_AUTH_DATABASE: ${MONGODB_EXPRESS_USERNAME}
    networks:
    - ${DOCKER_NETWORK}
    depends_on:
      mongo:
        condition: service_healthy

networks:
  mynetwork:
    driver: bridge

volumes:
  server-v-node-modules:
    name: "server-v-node-modules"
  database-v:
    name: "database-v"
